{
  "schema_meta": {
    "name": "EnerMorph Tasks Catalog",
    "version": "1.0.0",
    "unit_system": "SI",
    "notes": "AMR-focused tasks with energy logging; intended for validation of context files and reproducible benchmarking."
  },
  "tasks": [
    {
      "task_id": "nav_point_to_point",
      "task_class": "Navigation",
      "task_type": "point_to_point",
      "description": "Drive from start pose to a single goal pose along a free path.",
      "required_parameters": ["goal_pose_world", "timeout_s"],
      "default_parameters": { "timeout_s": 600, "tolerance_m": 0.3 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "imu", "tof", "env"],
      "success_criteria_hint": "distance_to(goal_pose_world) < tolerance_m",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "energy_per_m_jpm", "avg_speed_mps", "collisions_count"]
    },
    {
      "task_id": "nav_loop_grid",
      "task_class": "Navigation",
      "task_type": "nav_loop_grid",
      "description": "Closed-loop navigation over a rectangular grid (e.g., 0.5 m cells) for a specified number of loops.",
      "required_parameters": ["grid_cell_m", "loops", "timeout_s"],
      "default_parameters": { "grid_cell_m": 0.5, "loops": 3.0, "timeout_s": 1800 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "imu", "tof", "env"],
      "success_criteria_hint": "return_to(start_pose) && within_tolerance(0.5m)",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "energy_per_m_jpm", "power_avg_w", "power_peak_w", "collisions_count"]
    },
    {
      "task_id": "patrol_waypoints",
      "task_class": "Patrol",
      "task_type": "waypoint_cycle",
      "description": "Cycle through a fixed list of waypoints and return to start.",
      "required_parameters": ["waypoints_world", "timeout_s"],
      "default_parameters": { "timeout_s": 1800, "tolerance_m": 0.3 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "imu"],
      "success_criteria_hint": "visited_all_waypoints && return_to(start_pose)",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "energy_per_m_jpm", "collisions_count"]
    },
    {
      "task_id": "coverage_pass",
      "task_class": "Mapping",
      "task_type": "coverage_pass",
      "description": "Perform a coverage sweep of a bounded area (e.g., lawnmower pattern).",
      "required_parameters": ["area_region_world", "coverage_ratio_min", "timeout_s"],
      "default_parameters": { "coverage_ratio_min": 0.9, "timeout_s": 2400 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "imu"],
      "success_criteria_hint": "coverage >= coverage_ratio_min",
      "recommended_metrics": ["coverage", "time_s", "path_length_m", "energy_j", "energy_per_m_jpm"]
    },
    {
      "task_id": "mapping_slam_loop",
      "task_class": "Mapping",
      "task_type": "slam_loop",
      "description": "Create or update a map while completing a loop that returns to the start pose.",
      "required_parameters": ["timeout_s"],
      "default_parameters": { "timeout_s": 1800 },
      "required_streams": ["odom", "battery", "lidar"],
      "recommended_streams": ["imu", "env"],
      "success_criteria_hint": "loop_closure_detected && trajectory_complete",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "energy_per_m_jpm", "map_entropy_reduction"]
    },
    {
      "task_id": "dock_to_charger",
      "task_class": "Docking",
      "task_type": "docking_charge",
      "description": "Navigate to and dock with charging station.",
      "required_parameters": ["dock_pose_world", "timeout_s"],
      "default_parameters": { "timeout_s": 600, "tolerance_m": 0.1, "tolerance_yaw_rad": 0.17 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "tof", "imu"],
      "success_criteria_hint": "within_pose_tolerance && charging_started",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_attempt", "path_length_m"]
    },
    {
      "task_id": "docking_precision_tag",
      "task_class": "Docking",
      "task_type": "precision_apriltag",
      "description": "Precision docking to a tag/marker-defined pose.",
      "required_parameters": ["dock_tag_id", "timeout_s"],
      "default_parameters": { "timeout_s": 600, "tolerance_m": 0.05 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "tof"],
      "success_criteria_hint": "pose_error < 0.05m && stable_contact",
      "recommended_metrics": ["time_s", "energy_j", "path_length_m"]
    },
    {
      "task_id": "obstacle_slalom",
      "task_class": "Navigation",
      "task_type": "slalom",
      "description": "Traverse a corridor with staggered obstacles (slalom).",
      "required_parameters": ["corridor_width_m", "cone_spacing_m", "timeout_s"],
      "default_parameters": { "corridor_width_m": 1.5, "cone_spacing_m": 2.0, "timeout_s": 900 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "tof", "imu"],
      "success_criteria_hint": "no_collision && pass_all_gates",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "collisions_count", "min_clearance_m"]
    },
    {
      "task_id": "narrow_corridor",
      "task_class": "Navigation",
      "task_type": "narrow_passage",
      "description": "Pass through a narrow corridor with minimal clearance.",
      "required_parameters": ["corridor_width_m", "length_m", "timeout_s"],
      "default_parameters": { "corridor_width_m": 0.8, "length_m": 5.0, "timeout_s": 600 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "tof"],
      "success_criteria_hint": "traverse_length_without_collision",
      "recommended_metrics": ["time_s", "energy_j", "collisions_count"]
    },
    {
      "task_id": "doorway_traversal",
      "task_class": "Navigation",
      "task_type": "doorway_pass",
      "description": "Approach and pass through a doorway; resume path.",
      "required_parameters": ["door_width_m", "timeout_s"],
      "default_parameters": { "door_width_m": 0.9, "timeout_s": 600 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "tof"],
      "success_criteria_hint": "passage_successful && no_contact",
      "recommended_metrics": ["time_s", "energy_j", "collisions_count"]
    },
    {
      "task_id": "ramp_up_down",
      "task_class": "Benchmark",
      "task_type": "ramp_ascend_descend",
      "description": "Ascend and descend a ramp; measure energy cost and stability.",
      "required_parameters": ["ramp_angle_deg", "length_m", "timeout_s"],
      "default_parameters": { "ramp_angle_deg": 10, "length_m": 3.0, "timeout_s": 600 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "complete_up_and_down_without_slip",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_m_jpm", "slip_events"]
    },
    {
      "task_id": "surface_mix_sweep",
      "task_class": "Benchmark",
      "task_type": "multi_friction_sweep",
      "description": "Traverse patches with different surface frictions (epoxy, tiles, carpet).",
      "required_parameters": ["patches", "timeout_s"],
      "default_parameters": { "timeout_s": 1200 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu", "env"],
      "success_criteria_hint": "visit_all_patches && no_stall",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_m_jpm", "path_length_m"]
    },
    {
      "task_id": "payload_step",
      "task_class": "Logistics",
      "task_type": "payload_step_load",
      "description": "Repeat the same course with stepwise-increasing payload (e.g., 0, 1, 2 kg).",
      "required_parameters": ["payloads_kg", "course_length_m", "timeout_s"],
      "default_parameters": { "payloads_kg": [0, 1, 2], "course_length_m": 50.0, "timeout_s": 2400 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "complete_each_load_without_stall",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "energy_per_kgm_jpkgm"]
    },
    {
      "task_id": "payload_profile",
      "task_class": "Logistics",
      "task_type": "payload_gradient",
      "description": "Execute a fixed route with an explicit payload mass; repeat across mass settings.",
      "required_parameters": ["payload_kg", "route_waypoints", "timeout_s"],
      "default_parameters": { "payload_kg": 2.0, "timeout_s": 1800 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "route_completed && rate_limits_respected",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_m_jpm", "energy_per_kgm_jpkgm"]
    },
    {
      "task_id": "stop_go_cycle",
      "task_class": "Benchmark",
      "task_type": "stop_and_go",
      "description": "Repeat stop-hold-go cycles to profile transient energy and acceleration costs.",
      "required_parameters": ["cycles", "hold_s", "timeout_s"],
      "default_parameters": { "cycles": 10, "hold_s": 3, "timeout_s": 1200 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "all_cycles_completed",
      "recommended_metrics": ["time_s", "energy_j", "power_peak_w", "accel_events"]
    },
    {
      "task_id": "speed_step",
      "task_class": "Benchmark",
      "task_type": "speed_profile_step",
      "description": "Run a straight segment with stepwise speed setpoints (e.g., 0.2 → 0.4 → 0.6 → 0.8 m/s).",
      "required_parameters": ["speed_setpoints_mps", "segment_length_m", "timeout_s"],
      "default_parameters": { "speed_setpoints_mps": [0.2, 0.4, 0.6, 0.8], "segment_length_m": 10.0, "timeout_s": 1800 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "track_speeds_within_tolerance",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_m_jpm", "speed_tracking_rmse"]
    },
    {
      "task_id": "speed_sine",
      "task_class": "Benchmark",
      "task_type": "speed_profile_sine",
      "description": "Follow a sinusoidal speed profile; analyze dynamic energy and control effort.",
      "required_parameters": ["amplitude_mps", "frequency_hz", "duration_s", "timeout_s"],
      "default_parameters": { "amplitude_mps": 0.3, "frequency_hz": 0.1, "duration_s": 300, "timeout_s": 900 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "speed_tracking_rmse < threshold",
      "recommended_metrics": ["time_s", "energy_j", "power_avg_w", "power_peak_w", "speed_tracking_rmse"]
    },
    {
      "task_id": "queue_follow",
      "task_class": "Following",
      "task_type": "queue_following",
      "description": "Follow a slow-moving leader with stop-and-go behavior.",
      "required_parameters": ["leader_speed_profile", "timeout_s"],
      "default_parameters": { "timeout_s": 1800 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["lidar", "tof"],
      "success_criteria_hint": "maintain_distance_band && no_collision",
      "recommended_metrics": ["time_s", "energy_j", "collisions_count"]
    },
    {
      "task_id": "line_follow",
      "task_class": "Navigation",
      "task_type": "line_follow",
      "description": "Follow a painted or taped line on the floor; record tracking and energy.",
      "required_parameters": ["line_course_length_m", "timeout_s"],
      "default_parameters": { "line_course_length_m": 50.0, "timeout_s": 1200 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "track_line_within_band && finish_course",
      "recommended_metrics": ["time_s", "path_length_m", "energy_j", "energy_per_m_jpm"]
    },
    {
      "task_id": "nfc_grid_nav",
      "task_class": "Navigation",
      "task_type": "tag_grid_navigation",
      "description": "Navigate using a floor NFC/marker grid; validate cell hits and energy per cell.",
      "required_parameters": ["cell_size_m", "cell_path_ids", "timeout_s"],
      "default_parameters": { "cell_size_m": 0.5, "timeout_s": 1800 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["env"],
      "success_criteria_hint": "visit_all_cells_in_order",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_cell_jpc", "missed_cells_count"]
    },
    {
      "task_id": "sensor_degradation",
      "task_class": "Benchmark",
      "task_type": "sensor_failover",
      "description": "Repeat a base course with degraded sensing (e.g., lidar off) to profile energy/robustness.",
      "required_parameters": ["degradation_modes", "course_length_m", "timeout_s"],
      "default_parameters": { "degradation_modes": ["lidar_off"], "course_length_m": 50.0, "timeout_s": 1800 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu", "tof"],
      "success_criteria_hint": "course_completed && acceptable_safety_margin",
      "recommended_metrics": ["time_s", "energy_j", "collisions_count", "path_length_m"]
    },
    {
      "task_id": "endurance_until_soc",
      "task_class": "EnergyTest",
      "task_type": "battery_endurance",
      "description": "Run a loop until battery reaches a target SOC (e.g., 20%).",
      "required_parameters": ["soc_target", "loop_length_m", "timeout_s"],
      "default_parameters": { "soc_target": 0.2, "loop_length_m": 20.0, "timeout_s": 14400 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["env"],
      "success_criteria_hint": "battery_soc <= soc_target",
      "recommended_metrics": ["total_time_s", "total_distance_m", "total_energy_j", "specific_energy_j_per_km"]
    },
    {
      "task_id": "idle_baseline",
      "task_class": "EnergyTest",
      "task_type": "idle_power_baseline",
      "description": "Stationary idle with logging to measure baseline compute and standby power.",
      "required_parameters": ["duration_s", "timeout_s"],
      "default_parameters": { "duration_s": 600, "timeout_s": 900 },
      "required_streams": ["battery"],
      "recommended_streams": ["env"],
      "success_criteria_hint": "no_motion && complete_duration",
      "recommended_metrics": ["power_avg_w", "energy_j"]
    },
    {
      "task_id": "compute_load_profile",
      "task_class": "EnergyTest",
      "task_type": "compute_load",
      "description": "Apply CPU/GPU load while stationary to profile compute energy.",
      "required_parameters": ["load_levels", "duration_s", "timeout_s"],
      "default_parameters": { "load_levels": [0.25, 0.5, 0.75, 1.0], "duration_s": 120, "timeout_s": 1800 },
      "required_streams": ["battery"],
      "recommended_streams": ["env"],
      "success_criteria_hint": "complete_all_levels && safe_temp",
      "recommended_metrics": ["power_avg_w", "power_peak_w", "energy_j"]
    },
    {
      "task_id": "towing_drag",
      "task_class": "Logistics",
      "task_type": "towing_drag_test",
      "description": "Tow a passive cart/sled over a straight track; measure energy vs. drag.",
      "required_parameters": ["tow_force_n", "track_length_m", "timeout_s"],
      "default_parameters": { "tow_force_n": 10.0, "track_length_m": 20.0, "timeout_s": 1200 },
      "required_streams": ["odom", "battery"],
      "recommended_streams": ["imu"],
      "success_criteria_hint": "track_completed && tow_integrity_ok",
      "recommended_metrics": ["time_s", "energy_j", "energy_per_m_jpm"]
    }
  ]
}
