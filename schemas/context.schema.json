{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://enermorph.org/schemas/context.schema.json",
  "title": "EnerMorph Context Schema",
  "description": "Generic, reproducible context specification for tasks, environments, payloads, protocols, logging, constraints, and evaluation. SI units throughout.",
  "type": "object",
  "required": ["schema_meta", "identifiers", "context_profile"],
  "additionalProperties": false,

  "properties": {
    "schema_meta": {
      "type": "object",
      "description": "Schema/file-level metadata for versioning and reproducibility.",
      "required": ["schema_name", "schema_version", "file_version", "created_at", "licenses", "unit_system"],
      "additionalProperties": false,
      "properties": {
        "schema_name": { "type": "string", "const": "EnerMorph Context" },
        "schema_version": {
          "type": "string",
          "description": "Semantic version of this schema definition.",
          "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
        },
        "file_version": {
          "type": "string",
          "description": "Semantic version of THIS context instance (increment when context changes).",
          "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
        },
        "created_at": { "$ref": "#/$defs/iso_datetime" },
        "updated_at": { "$ref": "#/$defs/iso_datetime" },
        "hash_sha256": {
          "type": "string",
          "description": "Optional content hash over canonicalized JSON.",
          "pattern": "^[a-fA-F0-9]{64}$"
        },
        "licenses": { "type": "array", "minItems": 1, "items": { "type": "string" } },
        "provenance": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "authors": { "type": "array", "items": { "type": "string" } },
            "organization": { "type": "string" },
            "toolchain": { "type": "array", "items": { "type": "string" } },
            "notes": { "type": "string" }
          }
        },
        "unit_system": { "type": "string", "enum": ["SI"] }
      }
    },

    "identifiers": {
      "type": "object",
      "description": "Stable IDs for cross-linking with morphologies and episodes.",
      "required": ["context_id"],
      "additionalProperties": false,
      "properties": {
        "context_id": { "$ref": "#/$defs/uuid_or_slug" },
        "dataset_id": { "$ref": "#/$defs/uuid_or_slug" },
        "morphology_id": {
          "oneOf": [
            { "$ref": "#/$defs/uuid_or_slug" },
            { "type": "null" }
          ],
          "description": "If this context is bound to a specific morphology, include it here. Otherwise leave null and use compatibility hints."
        },
        "compatible_morphology_ids": {
          "type": "array",
          "description": "Optional: list of morphologies known to be compatible.",
          "items": { "$ref": "#/$defs/uuid_or_slug" }
        },
        "external_refs": { "type": "array", "items": { "$ref": "#/$defs/external_ref" } }
      }
    },

    "context_profile": {
      "type": "object",
      "description": "High-level description of the context: task, site, and reproducibility knobs.",
      "required": ["name", "task", "site"],
      "additionalProperties": false,
      "properties": {
        "name": { "type": "string" },
        "summary": { "type": "string" },
        "version_label": { "type": "string", "description": "Human-friendly version tag (e.g., nav_loop_v2)." },

        "task": {
          "type": "object",
          "required": ["task_class"],
          "additionalProperties": false,
          "properties": {
            "task_class": {
              "type": "string",
              "description": "Broad task category.",
              "enum": [
                "Navigation", "PickPlace", "Assembly", "Inspection",
                "Patrol", "Mapping", "Docking", "Manipulation",
                "Following", "Tracking", "Calibration", "Other"
              ]
            },
            "task_type": { "type": "string", "description": "Sub-type (free text). Example: 'nav_loop', 'shelf_pick', 'line_follow'." },
            "goals": {
              "type": "array",
              "description": "Goal definitions; interpretation varies by task.",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "goal_id": { "$ref": "#/$defs/uuid_or_slug" },
                  "description": { "type": "string" },
                  "pose_world": { "$ref": "#/$defs/pose" },
                  "region_world": { "$ref": "#/$defs/region" },
                  "success_criteria": { "type": "string" }
                }
              }
            },
            "waypoints_world": {
              "type": "array",
              "items": { "$ref": "#/$defs/pose" },
              "description": "Optional ordered path/poses in world coordinates."
            },
            "templates": {
              "type": "array",
              "description": "Reusable task templates or macros (parameterized).",
              "items": { "$ref": "#/$defs/template" }
            },
            "parameters": { "type": "object", "description": "Free-form task parameters (e.g., max_retries, timeout_s).", "additionalProperties": true }
          }
        },

        "site": {
          "type": "object",
          "description": "Environment, location, map, and static obstacles.",
          "required": ["location", "environment"],
          "additionalProperties": false,
          "properties": {
            "location": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "site_name": { "type": "string" },
                "site_code": { "type": "string" },
                "address": { "type": "string" },
                "geo": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "lat": { "type": "number", "minimum": -90, "maximum": 90 },
                    "lon": { "type": "number", "minimum": -180, "maximum": 180 },
                    "alt_m": { "type": "number" }
                  }
                },
                "indoor": { "type": "boolean" }
              }
            },
            "map": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "map_uri": { "$ref": "#/$defs/uri" },
                "frame": { "type": "string", "default": "world" },
                "resolution_m": { "type": "number", "minimum": 0 },
                "size_m": { "$ref": "#/$defs/vec2" },
                "notes": { "type": "string" }
              }
            },
            "environment": {
              "type": "object",
              "description": "Ambient conditions and surfaces (ranges allowed for reproducibility).",
              "additionalProperties": false,
              "properties": {
                "temperature_c": { "$ref": "#/$defs/range_number" },
                "humidity_rel": { "$ref": "#/$defs/range_number", "description": "0–1 or 0–100 depending on your convention; prefer 0–1." },
                "pressure_pa": { "$ref": "#/$defs/range_number" },
                "illum_lux": { "$ref": "#/$defs/range_number" },
                "noise_dba": { "$ref": "#/$defs/range_number" },
                "em_interference": { "type": "string", "description": "Qualitative or quantitative description." },
                "air_quality": { "type": "string" },
                "surface": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": { "type": "string", "description": "e.g., concrete, epoxy, tiles, carpet, outdoor_asphalt." },
                    "roughness_class": { "type": "string" },
                    "friction_coeff": { "type": "number", "minimum": 0 }
                  }
                }
              }
            },
            "static_obstacles": {
              "type": "array",
              "items": { "$ref": "#/$defs/obstacle" }
            },
            "zones": {
              "type": "array",
              "description": "Named polygons/regions: workcells, no-go zones, charging areas.",
              "items": { "$ref": "#/$defs/zone" }
            }
          }
        },

        "payloads": {
          "type": "array",
          "description": "Optional payload/end-effector or carried objects used in this context.",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["payload_id", "name"],
            "properties": {
              "payload_id": { "$ref": "#/$defs/uuid_or_slug" },
              "name": { "type": "string" },
              "mass_kg": { "type": "number", "minimum": 0 },
              "com_in_mount_m": { "$ref": "#/$defs/vec3" },
              "inertia": { "$ref": "#/$defs/inertia" },
              "mounted_to_node": { "type": "string", "description": "Node ID or name on morphology where mounted (if applicable)." },
              "attributes": { "type": "object", "additionalProperties": true },
              "external_refs": { "type": "array", "items": { "$ref": "#/$defs/external_ref" } }
            }
          }
        },

        "protocol": {
          "type": "object",
          "description": "How to execute the task: steps, timings, stop conditions, and success criteria.",
          "required": ["procedure"],
          "additionalProperties": false,
          "properties": {
            "random_seed": { "type": "integer", "description": "Seed for stochastic elements." },
            "time_budget_s": { "type": "number", "minimum": 0 },
            "procedure": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["step_id", "action"],
                "properties": {
                  "step_id": { "$ref": "#/$defs/uuid_or_slug" },
                  "action": { "type": "string", "description": "Free-text verb: navigate, pick, place, wait, measure, etc." },
                  "parameters": { "type": "object", "additionalProperties": true },
                  "target_pose_world": { "$ref": "#/$defs/pose" },
                  "target_region_world": { "$ref": "#/$defs/region" },
                  "duration_s": { "type": "number", "minimum": 0 },
                  "wait_until": { "type": "string", "description": "Event or condition name." },
                  "notes": { "type": "string" }
                }
              }
            },
            "stop_conditions": {
              "type": "array",
              "items": { "$ref": "#/$defs/condition" }
            },
            "success_criteria": {
              "type": "array",
              "items": { "$ref": "#/$defs/condition" },
              "description": "Conditions that must be satisfied to deem success."
            }
          }
        },

        "constraints": {
          "type": "object",
          "description": "Operational limits for safety and comparability.",
          "additionalProperties": false,
          "properties": {
            "speed_limit_mps": { "type": "number", "minimum": 0 },
            "accel_limit_mps2": { "type": "number" },
            "jerk_limit_mps3": { "type": "number" },
            "power_limit_w": { "type": "number", "minimum": 0 },
            "energy_budget_j": { "type": "number", "minimum": 0 },
            "geofences": {
              "type": "array",
              "items": { "$ref": "#/$defs/zone" }
            },
            "collision_margin_m": { "type": "number", "minimum": 0 },
            "min_clearance_m": { "type": "number", "minimum": 0 },
            "other": { "type": "object", "additionalProperties": true }
          }
        },

        "logging": {
          "type": "object",
          "description": "Data logging policy for reproducible datasets.",
          "required": ["timebase", "streams"],
          "additionalProperties": false,
          "properties": {
            "timebase": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "clock_source": { "type": "string", "enum": ["system", "ptp", "ntp", "gps", "other"] },
                "timezone": { "type": "string", "description": "IANA timezone for wall clock, e.g., 'Africa/Cairo'." },
                "sync_method": { "type": "string", "description": "PTP domain, NTP servers, or other sync details." }
              }
            },
            "streams": {
              "type": "array",
              "description": "Declared data streams and nominal sampling.",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "source", "modality"],
                "properties": {
                  "name": { "type": "string" },
                  "source": { "type": "string", "description": "Sensor/actuator/topic identifier or node id." },
                  "modality": { "type": "string", "description": "e.g., imu, lidar, camera, joint_state, motor_current, voltage, power." },
                  "sampling_hz": { "type": "number", "minimum": 0 },
                  "encoding": { "type": "string", "description": "e.g., CSV, ROS2 bag, Parquet, HDF5, binary float32." },
                  "units": { "type": "string", "description": "SI unit string if scalar (e.g., 'm/s', 'A', 'V')." },
                  "topic": { "type": "string", "description": "Pub/sub topic if applicable (e.g., ROS2)." },
                  "attributes": { "type": "object", "additionalProperties": true }
                }
              }
            },
            "latency_budget_ms": { "type": "number", "minimum": 0 },
            "dropped_frame_policy": { "type": "string", "enum": ["drop", "interpolate", "pad", "flag"] },
            "data_retention": { "type": "string", "description": "How long to keep raw logs." }
          }
        },

        "compute_network": {
          "type": "object",
          "description": "Edge/host resources and network/QoS.",
          "additionalProperties": false,
          "properties": {
            "edge_nodes": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": { "type": "string" },
                  "cpu": { "type": "string" },
                  "gpu": { "type": "string" },
                  "ram_gb": { "type": "number", "minimum": 0 },
                  "storage_gb": { "type": "number", "minimum": 0 },
                  "os": { "type": "string" }
                }
              }
            },
            "network": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "protocols": { "type": "array", "items": { "type": "string" }, "description": "e.g., Wi-Fi, Ethernet, 5G, MQTT, DDS." },
                "qos": { "type": "string" },
                "bandwidth_mbps": { "type": "number", "minimum": 0 },
                "latency_ms": { "type": "number", "minimum": 0 }
              }
            }
          }
        },

        "safety": {
          "type": "object",
          "description": "Risk and mitigation planning for the context.",
          "additionalProperties": false,
          "properties": {
            "risk_level": { "type": "string", "enum": ["Low", "Medium", "High", "Unknown"] },
            "ppe_required": { "type": "array", "items": { "type": "string" } },
            "emergency_stop": { "type": "boolean" },
            "spotters_required": { "type": "boolean" },
            "checklists": { "type": "array", "items": { "type": "string" } },
            "incidents_policy": { "type": "string" }
          }
        },

        "evaluation": {
          "type": "object",
          "description": "Metrics and ground-truth/labels configuration.",
          "additionalProperties": false,
          "properties": {
            "metrics": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "required": ["name"],
                "properties": {
                  "name": { "type": "string", "description": "e.g., success_rate, path_length_m, energy_j, time_s, f1, auc." },
                  "definition": { "type": "string" },
                  "units": { "type": "string" },
                  "higher_is_better": { "type": "boolean" }
                }
              }
            },
            "ground_truth": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "annotation_uri": { "$ref": "#/$defs/uri" },
                "ontology_uri": { "$ref": "#/$defs/uri" },
                "label_schema": { "type": "object", "additionalProperties": true }
              }
            }
          }
        },

        "timing": {
          "type": "object",
          "description": "Scheduling windows and durations.",
          "additionalProperties": false,
          "properties": {
            "planned_start": { "$ref": "#/$defs/iso_datetime" },
            "planned_end": { "$ref": "#/$defs/iso_datetime" },
            "typical_duration_s": { "type": "number", "minimum": 0 },
            "repeat_rrule": { "type": "string", "description": "RFC 5545 RRULE for repeating contexts." }
          }
        },

        "permissions_ethics": {
          "type": "object",
          "description": "Permits, access approvals, and ethical notes if humans are involved.",
          "additionalProperties": false,
          "properties": {
            "permits": { "type": "array", "items": { "type": "string" } },
            "data_privacy": { "type": "string" },
            "human_subjects": { "type": "boolean" },
            "notes": { "type": "string" }
          }
        },

        "events_template": {
          "type": "array",
          "description": "Optional: expected timeline of named events to aid episode alignment.",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": ["event_key", "description"],
            "properties": {
              "event_key": { "type": "string", "description": "Short stable name (e.g., 'start_nav', 'reach_wp1')." },
              "description": { "type": "string" },
              "expected_order": { "type": "integer", "minimum": 0 }
            }
          }
        },

        "attributes": {
          "type": "object",
          "description": "Free-form extensibility to avoid schema churn.",
          "additionalProperties": true
        },

        "external_refs": { "type": "array", "items": { "$ref": "#/$defs/external_ref" } }
      }
    }
  },

  "$defs": {
    "iso_datetime": { "type": "string", "format": "date-time" },
    "uuid_or_slug": {
      "oneOf": [
        { "type": "string", "format": "uuid" },
        { "type": "string", "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,64}$" }
      ]
    },
    "uri": { "type": "string", "format": "uri" },

    "vec2": {
      "type": "array",
      "items": [{ "type": "number" }, { "type": "number" }],
      "minItems": 2, "maxItems": 2
    },
    "vec3": {
      "type": "array",
      "items": [{ "type": "number" }, { "type": "number" }, { "type": "number" }],
      "minItems": 3, "maxItems": 3
    },
    "quat_xyzw": {
      "type": "array",
      "items": [{ "type": "number" }, { "type": "number" }, { "type": "number" }, { "type": "number" }],
      "minItems": 4, "maxItems": 4
    },
    "pose": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "translation_m": { "$ref": "#/$defs/vec3" },
        "rotation_rpy_rad": { "$ref": "#/$defs/vec3" },
        "rotation_quat_xyzw": { "$ref": "#/$defs/quat_xyzw" },
        "frame": { "type": "string", "default": "world" }
      }
    },
    "bbox": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "center_m": { "$ref": "#/$defs/vec3" },
        "size_m": { "$ref": "#/$defs/vec3" },
        "rotation_rpy_rad": { "$ref": "#/$defs/vec3" }
      }
    },
    "polygon": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "points": {
          "type": "array",
          "minItems": 3,
          "items": { "$ref": "#/$defs/vec2" }
        },
        "frame": { "type": "string", "default": "world" }
      }
    },
    "region": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": { "type": "string", "enum": ["bbox", "polygon"] },
        "bbox": { "$ref": "#/$defs/bbox" },
        "polygon": { "$ref": "#/$defs/polygon" }
      }
    },
    "obstacle": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id"],
      "properties": {
        "id": { "$ref": "#/$defs/uuid_or_slug" },
        "name": { "type": "string" },
        "type": { "type": "string", "description": "e.g., wall, pillar, rack, machine, table, shelf." },
        "region_world": { "$ref": "#/$defs/region" },
        "attributes": { "type": "object", "additionalProperties": true }
      }
    },
    "zone": {
      "type": "object",
      "additionalProperties": false,
      "required": ["zone_id", "name", "region_world"],
      "properties": {
        "zone_id": { "$ref": "#/$defs/uuid_or_slug" },
        "name": { "type": "string" },
        "role": { "type": "string", "description": "e.g., workcell, charging, loading, no-go, emergency." },
        "region_world": { "$ref": "#/$defs/region" },
        "attributes": { "type": "object", "additionalProperties": true }
      }
    },
    "inertia": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ixx": { "type": "number" }, "ixy": { "type": "number" }, "ixz": { "type": "number" },
        "iyy": { "type": "number" }, "iyz": { "type": "number" }, "izz": { "type": "number" }
      }
    },
    "template": {
      "type": "object",
      "additionalProperties": false,
      "required": ["template_id", "name"],
      "properties": {
        "template_id": { "$ref": "#/$defs/uuid_or_slug" },
        "name": { "type": "string" },
        "parameters": { "type": "object", "additionalProperties": true },
        "notes": { "type": "string" }
      }
    },
    "condition": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": { "type": "string" },
        "expression": { "type": "string", "description": "Machine-readable predicate if available (e.g., CEL/JSONLogic)." },
        "timeout_s": { "type": "number", "minimum": 0 },
        "notes": { "type": "string" }
      }
    },
    "external_ref": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "uri"],
      "properties": {
        "type": { "type": "string", "description": "e.g., 'map', 'doc', 'image', 'repo', 'video'." },
        "uri": { "$ref": "#/$defs/uri" },
        "hash_sha256": { "type": "string", "pattern": "^[a-fA-F0-9]{64}$" },
        "notes": { "type": "string" }
      }
    }
  }
}
